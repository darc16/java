queryForRowSet() - set of values for the full row(s) from the database. returns SQLRowSet Object. rs.next() to get each record rs.get("fieldname") to get values.
queryForList() - list is individual values from query, if no results empty list
queryForMap() - map of fields and values from a single row
queryForObject(sql, object class) - single field value and one row. Multiple rows will blow up.
        get count or get database time. For counts on joins this could blow up use queryforrowset instead and check rs.next()
         String sql = "Select count(*) from indicators";
        JdbcTemplate jt = new JdbcTemplate(this.dataSource);
        SqlRowSet rs = jt.queryForRowSet(sql);
        int count = 0;
        if(rs.next()){
            count = rs.getInt("count");
        }
query() - row mapper
update() - returns the number of affected rows

BeanPropertyRowMapper rowMapper = new BeanPropertyRowMapper(ShortReport.class);

        String sql ="Select id, description, display_name from reports";
        JdbcTemplate jt = new JdbcTemplate(this.dataSource);

        List<ShortReport> shortReports = jt.query(sql, rowMapper);

        return shortReports;

get counts using a string for the date

select to_char(created_date, 'YYYY-mm'), count(to_char(created_date, 'YYYY-mm')) from reports group by to_char(created_date, 'YYYY-mm')

select indicator_types.name, count(indicator_types.name)
from indicators
join indicator_types on indicators.ind_type = indicator_types.id
group by indicator_types.name;
